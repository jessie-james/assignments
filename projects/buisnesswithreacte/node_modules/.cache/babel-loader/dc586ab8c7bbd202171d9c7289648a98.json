{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactRouter = require(\"react-router\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar isPromise = function isPromise(obj) {\n  return !!obj && ((typeof obj === \"undefined\" ? \"undefined\" : _typeof(obj)) === \"object\" || typeof obj === \"function\") && typeof obj.then === \"function\";\n};\n\nvar infoRedirect = function infoRedirect(redirect, location) {\n  var from = \"\" + location.pathname + location.search;\n  var to = (redirect || \"\").replace(/{\\d+}/ig, encodeURIComponent(from));\n  return {\n    to: to,\n    from: from\n  };\n};\n\nvar StateRoute = function (_Component) {\n  _inherits(StateRoute, _Component);\n\n  function StateRoute(props, context) {\n    _classCallCheck(this, StateRoute);\n\n    var _this = _possibleConstructorReturn(this, (StateRoute.__proto__ || Object.getPrototypeOf(StateRoute)).call(this, props, context));\n\n    _this.updateState = function (state, cb) {\n      if (_this.alive) {\n        _this.setState(state, cb);\n      }\n    };\n\n    var authorize = props.authorize,\n        componentProps = props.componentProps;\n    _this.state = {\n      ready: true,\n      auth: {\n        verified: true\n      }\n    };\n    _this.alive = true;\n    var authorized = authorize(componentProps);\n\n    if (isPromise(authorized)) {\n      _this.state.ready = false;\n      authorized.then(function (auth) {\n        return _this.updateState({\n          auth: auth,\n          ready: true\n        });\n      }).catch(function () {\n        return _this.updateState({\n          verified: false,\n          ready: true\n        });\n      });\n    } else {\n      _this.state.auth = authorized;\n    }\n\n    return _this;\n  }\n\n  _createClass(StateRoute, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var _this2 = this;\n\n      var authorize = nextProps.authorize,\n          componentProps = nextProps.componentProps,\n          location = nextProps.location;\n\n      if (location !== this.props.location) {\n        var authorized = authorize(componentProps);\n\n        if (isPromise(authorized)) {\n          var doAuthorize = function doAuthorize() {\n            return authorized.then(function (auth) {\n              return _this2.updateState({\n                auth: auth,\n                ready: true\n              });\n            }).catch(function () {\n              return _this2.updateState({\n                verified: false,\n                ready: true\n              });\n            });\n          };\n\n          this.updateState({\n            ready: false\n          }, doAuthorize);\n        } else {\n          this.updateState({\n            auth: authorized,\n            ready: true\n          });\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.alive = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _state = this.state,\n          auth = _state.auth,\n          ready = _state.ready;\n\n      if (!ready) {\n        return null;\n      }\n\n      var _props = this.props,\n          RouteComponent = _props.component,\n          componentProps = _props.componentProps,\n          routes = _props.routes,\n          location = _props.location;\n\n      if (!auth.verified) {\n        var redirect = infoRedirect(auth.redirect, location);\n        return _react2.default.createElement(_reactRouter.Redirect, redirect);\n      }\n\n      return _react2.default.createElement(RouteComponent, _extends({}, componentProps, {\n        routes: routes\n      }));\n    }\n  }]);\n\n  return StateRoute;\n}(_react.Component);\n\nStateRoute.defaultProps = {\n  authorize: function authorize() {\n    return {\n      verified: true\n    };\n  }\n};\nStateRoute.propTypes = {\n  location: _propTypes2.default.object,\n  component: _propTypes2.default.any,\n  routes: _propTypes2.default.any,\n  componentProps: _propTypes2.default.object,\n  authorize: _propTypes2.default.func\n};\nexports.default = StateRoute;","map":null,"metadata":{},"sourceType":"script"}