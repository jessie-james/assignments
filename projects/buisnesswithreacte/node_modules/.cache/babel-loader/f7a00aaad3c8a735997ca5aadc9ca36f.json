{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactRouter = require(\"react-router\");\n\nvar _StateRoute = require(\"./StateRoute\");\n\nvar _StateRoute2 = _interopRequireDefault(_StateRoute);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar DEFAULT_AUTH = function DEFAULT_AUTH() {\n  return {\n    verified: true\n  };\n};\n\nvar infoRedirect = function infoRedirect(redirect, location) {\n  var from = \"\" + location.pathname + location.search;\n  var to = (redirect || \"\").replace(/{\\d+}/ig, encodeURIComponent(from));\n  return {\n    to: to,\n    from: from\n  };\n};\n\nexports.default = function (route) {\n  var routes = route.routes;\n  var authorize = route.authorize || DEFAULT_AUTH;\n  var routeProps = {\n    path: route.path,\n    exact: route.exact,\n    strict: route.strict,\n    location: route.location\n  }; // https://reacttraining.com/react-router/web/api/Route/Route-props\n  // render props: { match, lacation, history }\n\n  if (route.component) {\n    routeProps.render = function (props) {\n      return _react2.default.createElement(_StateRoute2.default, {\n        authorize: authorize,\n        location: props.location,\n        component: route.component,\n        componentProps: props,\n        routes: routes\n      });\n    };\n  } else if (route.render) {\n    routeProps.render = function (props) {\n      var auth = authorize(props);\n\n      if (!auth.verified) {\n        var location = props.location;\n        var redirect = infoRedirect(auth.redirect, location);\n        return _react2.default.createElement(_reactRouter.Redirect, redirect);\n      }\n\n      return route.render(_extends({}, props, {\n        routes: routes\n      }));\n    };\n  } else if (route.children) {\n    routeProps.children = function (props) {\n      var auth = authorize(props);\n\n      if (!auth.verified) {\n        var location = props.location;\n        var redirect = infoRedirect(auth.redirect, location);\n        return _react2.default.createElement(_reactRouter.Redirect, redirect);\n      }\n\n      return route.children(_extends({}, props, {\n        routes: routes\n      }));\n    };\n  }\n\n  return _react2.default.createElement(_reactRouter.Route, routeProps);\n};","map":null,"metadata":{},"sourceType":"script"}